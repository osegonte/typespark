{"ast":null,"code":"import React,{createContext,useState,useEffect,useContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const ThemeProvider=_ref=>{let{children}=_ref;const[isDarkMode,setIsDarkMode]=useState(true);// Default to dark mode\n// Load theme preference from localStorage on initial render\nuseEffect(()=>{const savedTheme=localStorage.getItem('theme');if(savedTheme){setIsDarkMode(savedTheme==='dark');}},[]);// Update localStorage and apply theme when it changes\nuseEffect(()=>{localStorage.setItem('theme',isDarkMode?'dark':'light');// Apply theme to document\nif(isDarkMode){document.documentElement.classList.add('dark');document.body.style.backgroundColor='#0f172a';// dark-blue from our theme\ndocument.body.style.color='#FFFFFF';// text-primary from our theme\n}else{document.documentElement.classList.remove('dark');document.body.style.backgroundColor='#FFFFFF';document.body.style.color='#1C1C1E';// dark text for light mode\n}},[isDarkMode]);const toggleTheme=()=>{setIsDarkMode(prev=>!prev);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{isDarkMode,toggleTheme},children:children});};export const useTheme=()=>useContext(ThemeContext);export default ThemeContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","setItem","document","documentElement","classList","add","body","style","backgroundColor","color","remove","toggleTheme","prev","Provider","value","useTheme"],"sources":["/Users/osegonte/typespark/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDarkMode, setIsDarkMode] = useState(true); // Default to dark mode\n\n  // Load theme preference from localStorage on initial render\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setIsDarkMode(savedTheme === 'dark');\n    }\n  }, []);\n\n  // Update localStorage and apply theme when it changes\n  useEffect(() => {\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n    \n    // Apply theme to document\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark');\n      document.body.style.backgroundColor = '#0f172a'; // dark-blue from our theme\n      document.body.style.color = '#FFFFFF'; // text-primary from our theme\n    } else {\n      document.documentElement.classList.remove('dark');\n      document.body.style.backgroundColor = '#FFFFFF';\n      document.body.style.color = '#1C1C1E'; // dark text for light mode\n    }\n  }, [isDarkMode]);\n\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport default ThemeContext;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAO,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAAE;AAEpD;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAChD,GAAIF,UAAU,CAAE,CACdD,aAAa,CAACC,UAAU,GAAK,MAAM,CAAC,CACtC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACAV,SAAS,CAAC,IAAM,CACdW,YAAY,CAACE,OAAO,CAAC,OAAO,CAAEL,UAAU,CAAG,MAAM,CAAG,OAAO,CAAC,CAE5D;AACA,GAAIA,UAAU,CAAE,CACdM,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC,CAC9CH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAAE;AACjDN,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,SAAS,CAAE;AACzC,CAAC,IAAM,CACLP,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACM,MAAM,CAAC,MAAM,CAAC,CACjDR,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CN,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,SAAS,CAAE;AACzC,CACF,CAAC,CAAE,CAACb,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAAe,WAAW,CAAGA,CAAA,GAAM,CACxBd,aAAa,CAACe,IAAI,EAAI,CAACA,IAAI,CAAC,CAC9B,CAAC,CAED,mBACErB,IAAA,CAACC,YAAY,CAACqB,QAAQ,EAACC,KAAK,CAAE,CAAElB,UAAU,CAAEe,WAAY,CAAE,CAAAhB,QAAA,CACvDA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,MAAO,MAAM,CAAAoB,QAAQ,CAAGA,CAAA,GAAM1B,UAAU,CAACG,YAAY,CAAC,CAEtD,cAAe,CAAAA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}